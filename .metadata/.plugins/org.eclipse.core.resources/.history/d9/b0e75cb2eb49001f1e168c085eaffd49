/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f103x6.h"
#include "Time_Base.h"
#include "osKernel.h"


#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

uint32_t Task0_counter,Task1_counter,Task2_counter;
void Task1();
void Task2();
void Task0();

int main(void)
{
	TCB_t Thread0 = {0};
	Thread0.stack_size = 100;
	Thread0.callback_function = Task0;

	TCB_t Thread1 = {0};
	Thread1.stack_size = 200;
	Thread1.callback_function = Task1;

	TCB_t Thread2 = {0};
	Thread2.stack_size = 200;
	Thread2.callback_function = Task2;


	RCC->AHBENR |= RCC_APB2ENR_IOPAEN;
	GPIOC->CRH = 0;
	GPIOC->CRH |= (1 << 20);
	GPIOC->CRH |= (1 << 22);
	timebase_init();
	osKernel_ThreadCreate(&Thread0);
	osKernel_ThreadCreate(&Thread1);
	osKernel_ThreadCreate(&Thread2);
	osKernel_init(10);

    while(1)
    {
    	GPIOC->BSRR |= 1<<13;

//    	Systick_Delay(1);
//    	GPIOC->BRR |= 1<<13;
//    	Systick_Delay(1);
    }

}
void Task0()
{
	while(1)
	{
		Task0_counter++;
	}
}

void Task1()
{
	while(1)
	{
		Task1_counter++;
	}
}
void Task2()
{
	while(1)
	{
		Task2_counter++;
	}

}

